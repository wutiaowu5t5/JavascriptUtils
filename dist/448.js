"use strict";(self.webpackChunkjavascriptutils=self.webpackChunkjavascriptutils||[]).push([[448],{946:(e,t,n)=>{n.r(t),n.d(t,{default:()=>J});var l=n(360),r=n(177),a=n(408),o=n(975);const s={viewBox:"0 0 1024 1024",width:"1.2em",height:"1.2em"},c=[(0,l.Lk)("path",{fill:"currentColor",d:"M104.704 685.248a64 64 0 0 0 90.496 0l316.8-316.8l316.8 316.8a64 64 0 0 0 90.496-90.496L557.248 232.704a64 64 0 0 0-90.496 0L104.704 594.752a64 64 0 0 0 0 90.496"},null,-1)],i={name:"ep-arrow-up-bold",render:function(e,t){return(0,l.uX)(),(0,l.CE)("svg",s,[...c])}},p={viewBox:"0 0 1024 1024",width:"1.2em",height:"1.2em"},u=[(0,l.Lk)("path",{fill:"currentColor",d:"M104.704 338.752a64 64 0 0 1 90.496 0l316.8 316.8l316.8-316.8a64 64 0 0 1 90.496 90.496L557.248 791.296a64 64 0 0 1-90.496 0L104.704 429.248a64 64 0 0 1 0-90.496"},null,-1)],d={name:"ep-arrow-down-bold",render:function(e,t){return(0,l.uX)(),(0,l.CE)("svg",p,[...u])}},y=["codetype"],g={__name:"codeTemplate",props:{code:{type:String,default:"",required:!0},codeType:{type:String,default:"JavaScript"}},setup(e){const t=e,n=(0,a.Kh)({code:"",isCollapsed:!0,isCollapsible:!1,maxHeight:300}),o=(0,a.KR)(null);(0,l.sV)((async()=>{setTimeout((()=>{var e;(e=>{const t=e.querySelector("code.hljs"),n=e.querySelector("pre");if(!t||!n)return;const l=t.innerHTML.split("\n").length,r=document.createElement("ul"),a=document.createDocumentFragment();for(let e=1;e<=l;e++){const t=document.createElement("li");t.innerText=e,a.appendChild(t)}r.appendChild(a),r.classList.add("hljs-code-number"),e.insertBefore(r,n);const o=document.createElement("div");o.classList.add("hljs-copy"),o.innerText="复制",o.addEventListener("click",(()=>{const e=document.createElement("textarea");document.body.appendChild(e),e.setAttribute("readonly","readonly"),e.value=t.innerText,e.select(),document.execCommand("copy")&&(document.execCommand("copy"),o.innerText="复制成功"),document.body.removeChild(e)})),n.appendChild(o),e.addEventListener("mouseover",(()=>{o.style.display="block"})),e.addEventListener("mouseout",(()=>{o.innerText="复制",o.style.display="none"}))})(o.value),(e=o.value)&&(console.log(e.scrollHeight,"el.scrollHeight"),n.isCollapsible=e.scrollHeight>n.maxHeight)}),400)}));const{isCollapsed:s,isCollapsible:c}=(0,a.QW)(n),{code:p,codeType:u}=(0,a.QW)(t);return(e,t)=>{const g=(0,l.g2)("highlightjs"),m=d,b=i;return(0,l.uX)(),(0,l.CE)("section",{ref_key:"hljsDom",ref:o,class:(0,r.C4)([{collapsed:(0,a.R1)(s)},"hljs-container"]),codetype:(0,a.R1)(u)},[(0,l.bF)(g,{language:(0,a.R1)(u),autodetect:!1,code:(0,a.R1)(p)},null,8,["language","code"]),(0,a.R1)(c)?((0,l.uX)(),(0,l.CE)("div",{key:0,class:"collapse-btn",onClick:t[0]||(t[0]=e=>{n.isCollapsed=!n.isCollapsed})},[(0,a.R1)(s)?((0,l.uX)(),(0,l.Wv)(m,{key:0,class:"floating-icon"})):((0,l.uX)(),(0,l.Wv)(b,{key:1,class:"floating-icon"}))])):(0,l.Q3)("",!0)],10,y)}}};var m=n(285);const b=(0,m.A)(g,[["__scopeId","data-v-3bbf4138"]]),h=e=>((0,l.Qi)("data-v-2006ff1e"),e=e(),(0,l.jt)(),e),k={class:"content-header"},f={class:"content"},v={class:"content-body"},x=h((()=>(0,l.Lk)("p",null,"代码",-1))),L={class:"content-footer"},j=h((()=>(0,l.Lk)("p",null,"示例",-1))),C={class:"example-container"},_={__name:"commonTemplate",props:{mainClass:{type:String,default:""},code:{type:String,default:""}},setup(e){const t=(0,o.lq)(),n=e,s=(0,a.Kh)({title:"",scriptName:"",isCollapsed:!0,isCollapsible:!1,maxHeight:300});(0,l.sV)((async()=>{(()=>{const{meta:e}=t;s.title=e.title})()}));const{title:c}=(0,a.QW)(s),{mainClass:i,code:p}=(0,a.QW)(n);return(e,t)=>((0,l.uX)(),(0,l.CE)("main",{class:(0,r.C4)([(0,a.R1)(i),"init-background-style"])},[(0,l.Lk)("header",k,(0,r.v_)((0,a.R1)(c)),1),(0,l.Lk)("section",f,[(0,l.Lk)("article",v,[x,(0,l.bF)(b,{code:(0,a.R1)(p)},null,8,["code"]),(0,l.RG)(e.$slots,"alert")]),(0,l.Lk)("footer",L,[j,(0,l.Lk)("section",C,[(0,l.RG)(e.$slots,"example")])])])],2))}},R=(0,m.A)(_,[["__scopeId","data-v-2006ff1e"]]);var W=n(838);n(299),n(143);const w=(e=>((0,l.Qi)("data-v-70d6c6f2"),e=e(),(0,l.jt)(),e))((()=>(0,l.Lk)("span",{class:"icon"},"i",-1))),O={__name:"alertTemplate",props:{type:{type:String,default:"info"}},setup(e){const t=e,n={info:{className:"alert-info",tooltip:"这是一个提醒内容的警告框",title:"Info"},suggestion:{className:"alert-suggestion",tooltip:"这是一个建议内容的警告框",title:"Suggestion"},important:{className:"alert-important",tooltip:"这是一个重要内容的警告框",title:"Important"},warning:{className:"alert-warning",tooltip:"这是一个警告内容的警告框",title:"Warning"},note:{className:"alert-note",tooltip:"这是一个注意内容的警告框",title:"Note"}},{type:o}=(0,a.QW)(t);return(e,t)=>{const s=W.R7;return(0,l.uX)(),(0,l.CE)("article",{class:(0,r.C4)(["alert",n[(0,a.R1)(o)].className])},[(0,l.Lk)("div",null,[(0,l.bF)(s,{effect:"dark",content:n[(0,a.R1)(o)].tooltip,placement:"top"},{default:(0,l.k6)((()=>[w])),_:1},8,["content"]),(0,l.Lk)("span",null,(0,r.v_)(n[(0,a.R1)(o)].title),1)]),(0,l.Lk)("figcaption",null,[(0,l.RG)(e.$slots,"content")])],2)}}},T=(0,m.A)(O,[["__scopeId","data-v-70d6c6f2"]]),D=(0,l.Lk)("br",null,null,-1),E=(0,l.Lk)("br",null,null,-1),P=(0,l.Lk)("br",null,null,-1),S=(0,l.Lk)("br",null,null,-1),A=(0,l.Lk)("br",null,null,-1),H=(0,l.Lk)("br",null,null,-1),X=(0,l.Lk)("br",null,null,-1),F=(0,l.Lk)("br",null,null,-1),N=(0,l.Lk)("br",null,null,-1),Q=(0,l.Lk)("br",null,null,-1),G=(0,l.Lk)("br",null,null,-1),I=(0,l.Lk)("br",null,null,-1),$=(0,l.Lk)("br",null,null,-1),M=(0,l.Lk)("br",null,null,-1),q=(0,l.Lk)("div",{class:"example-title"}," 引入 ",-1),B=(0,l.Lk)("div",{class:"example-title"}," Handle函数 ",-1),K=(0,l.Lk)("div",{class:"example-title"}," 使用 ",-1),J={__name:"Proxy",setup:e=>(e,t)=>{const n=T,r=b,o=R;return(0,l.uX)(),(0,l.Wv)(o,{code:(0,a.R1)("/*\n * @Description: DeepProxy类用于创建深度代理对象或数组\n * @Author: 5t5\n * @Time: 2024/6/10 15:19\n */\n\nclass DeepProxy {\n  \n  #cache = new WeakMap()\n  \n  constructor(){\n    // 初始化私有属性 #cache\n  }\n  \n  /**\n   * 创建一个深度代理对象或数组。\n   *\n   * @param {Object|Array} obj 需要被代理的原始对象或数组。\n   * @param {Object} handle 代理处理器，定义了代理对象上的操作如何被拦截和处理。\n   * @returns {Object|Array} 返回创建的深度代理对象，如果参数不合法则返回null。\n   */\n  create(obj, handle) {\n    // 检查传入的目标是否为对象或数组\n    if (!obj || typeof obj !== 'object') {\n      console.error('Illegal agent target: Target must be an object or array.')\n      return null\n    }\n    \n    // 检查代理处理器是否为对象\n    if (!handle || typeof handle !== 'object') {\n      console.error('Illegal handler: Handler must be an object.')\n      return null\n    }\n    \n    // 辅助函数，用于检查值是否为对象（包括数组）\n    const isObject = (val) => val !== null && typeof val === 'object'\n    \n    /**\n     * 递归遍历并代理对象或数组的每个嵌套属性。\n     *\n     * @param {Object|Array} target 需要被遍历和代理的目标对象或数组。\n     * @returns {Object|Array} 返回遍历和代理后的目标对象或数组。\n     */\n    const traverse = (target) => {\n      // 如果目标已经被代理过，直接返回缓存的代理对象\n      if (this.#cache.has(target)) {\n        return this.#cache.get(target)\n      }\n      \n      // 如果目标是数组\n      if (Array.isArray(target)) {\n        // 遍历数组的每一项\n        for (let i = 0; i < target.length; i++) {\n          // 如果当前项是对象或数组，则递归调用traverse进行处理\n          if (isObject(target[i])) {\n            target[i] = traverse(target[i])\n          }\n        }\n      } else {\n        // 如果目标是对象\n        // 遍历对象的每一个属性\n        for (const key in target) {\n          // 确保只处理对象自身的属性\n          if (Object.prototype.hasOwnProperty.call(target, key) && isObject(target[key])) {\n            target[key] = traverse(target[key])\n          }\n        }\n      }\n      \n      // 创建代理对象\n      const proxy = new Proxy(target, handle)\n      \n      // 缓存代理对象\n      this.#cache.set(target, proxy)\n      \n      // 返回处理后的代理对象\n      return proxy\n    }\n    \n    // 对传入的对象或数组进行遍历处理，并返回代理后的对象\n    return traverse(obj)\n  }\n  \n  /**\n   * 取消代理。\n   *\n   * 此方法用于检查给定的代理是否在缓存中，并根据情况返回缓存的原始对象或代理本身。\n   * 如果代理存在于缓存中，这意味着它之前被撤销过，此时返回缓存的对象，避免重复创建。\n   * 如果代理不在缓存中，则说明它没有被撤销过，直接返回该代理。\n   * 这种设计用于管理一组代理对象，确保它们在需要时可以被撤销和重新使用，或者在没有被撤销的情况下继续使用。\n   *\n   * @param {Object} proxy - 待撤销的代理对象。\n   * @returns {Object} 如果代理存在于缓存中，则返回缓存的原始对象；否则返回代理本身。\n   */\n  revoke(proxy) {\n    if (this.#cache.has(proxy)) {\n      return this.#cache.get(proxy)\n    }\n    return proxy\n  }\n  \n}\n\nexport default new DeepProxy()")},{alert:(0,l.k6)((()=>[(0,l.bF)(n,{type:"note"},{content:(0,l.k6)((()=>[(0,l.eW)(" 这段代码定义了一个名为 DeepProxy 的类，其主要功能是创建深度代理对象或数组，以便于在访问或修改这些对象的属性时进行拦截和自定义处理"),D,E,(0,l.eW)(" 代码的核心价值在于："),P,S,(0,l.eW)(" 深度代理创建：通过 create 方法，不仅将顶层对象或数组代理，还会递归地代理内部的所有对象和数组属性，实现了真正的深度代理。这对于需要跟踪和控制复杂数据结构的访问和修改行为非常有用。"),A,H,(0,l.eW)(" 代理缓存管理：内部使用 WeakMap (#cache) 来存储代理与原始对象的映射关系，这有助于资源管理，当原始对象不再被引用时，代理对象可通过垃圾回收机制自动释放，同时提供了 revoke 方法来获取原始对象或检查代理状态，增加了代理使用的灵活性和效率。"),X,F,(0,l.eW)(" 错误处理与类型检查：在创建代理前，会对输入的目标对象及处理器进行合法性检查，确保了方法调用的健壮性。"),N,Q,(0,l.eW)(" 导出默认实例：类的最后通过 export default new DeepProxy() 导出了一个 DeepProxy 类的实例，使得其他模块可以直接使用而无需显式创建实例，简化了外部调用。"),G,I,(0,l.eW)(" 综上所述，这段代码提供了一个强大的工具，用于实现JavaScript中对象或数组的深度代理功能，特别适合于数据绑定、性能监控、权限控制等场景。"),$,M])),_:1})])),example:(0,l.k6)((()=>[q,(0,l.bF)(r,{code:"// 使用示例\nimport DeepProxy from '@utils/DeepProxy/DeepProxy'"}),B,(0,l.bF)(r,{code:"const handler = {\n  get(target, prop) {\n    console.log(`Getting property ${ prop }`);\n    return target[prop];\n  },\n  set(target, prop, value) {\n    console.log(`Setting property ${ prop } to ${ value }`);\n    target[prop] = value;\n    return true;\n  }\n};"}),K,(0,l.bF)(r,{code:"const obj = { a: { b: 2 }, c: [3, 4] };\nconst proxyObj = DeepProxy.create(obj, handler);\n\n// Getting property a, Getting property b, 2\nconsole.log(proxyObj.a.b);\n// Getting property c, Setting property 2 to 5\nproxyObj.c.push(5); "})])),_:1},8,["code"])}}}}]);